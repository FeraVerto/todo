[{"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/app/store.ts":"1","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/TodolistsList/todolists-reducer.ts":"2","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/components/ErrorSnackbar/ErrorSnackbar.tsx":"3","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/utils/error-utils.ts":"4","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/api/todolists-api.ts":"5","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/index.tsx":"6","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/TodolistsList/Todolist/Todolist.tsx":"7","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/app/App.tsx":"8","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/TodolistsList/Todolist/Task/Task.tsx":"9","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/components/AddItemForm/AddItemForm.tsx":"10","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/components/EditableSpan/EditableSpan.tsx":"11","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/Login/Login.tsx":"12","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/Login/auth-reducer.ts":"13","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/TodolistsList/tasks-reducer.ts":"14","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/TodolistsList/TodolistsList.tsx":"15","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/app/app-reducer.ts":"16","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/reportWebVitals.ts":"17"},{"size":1097,"mtime":1597320250000,"results":"18","hashOfConfig":"19"},{"size":4584,"mtime":1614269146538,"results":"20","hashOfConfig":"19"},{"size":1092,"mtime":1596709376000,"results":"21","hashOfConfig":"19"},{"size":811,"mtime":1596712130000,"results":"22","hashOfConfig":"19"},{"size":3095,"mtime":1614278304539,"results":"23","hashOfConfig":"19"},{"size":752,"mtime":1614252298726,"results":"24","hashOfConfig":"19"},{"size":4193,"mtime":1596708050000,"results":"25","hashOfConfig":"19"},{"size":3932,"mtime":1614355078281,"results":"26","hashOfConfig":"19"},{"size":1773,"mtime":1596288338000,"results":"27","hashOfConfig":"19"},{"size":1595,"mtime":1596708362000,"results":"28","hashOfConfig":"19"},{"size":952,"mtime":1594147524000,"results":"29","hashOfConfig":"19"},{"size":4289,"mtime":1614274466175,"results":"30","hashOfConfig":"19"},{"size":2823,"mtime":1614275271263,"results":"31","hashOfConfig":"19"},{"size":5633,"mtime":1596714926000,"results":"32","hashOfConfig":"19"},{"size":4020,"mtime":1614269614232,"results":"33","hashOfConfig":"19"},{"size":2414,"mtime":1614280283919,"results":"34","hashOfConfig":"19"},{"size":425,"mtime":1607862188000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13jwofx",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/app/store.ts",[],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/TodolistsList/todolists-reducer.ts",["76"],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/components/ErrorSnackbar/ErrorSnackbar.tsx",[],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/utils/error-utils.ts",[],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/api/todolists-api.ts",[],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/index.tsx",[],["77","78"],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/TodolistsList/Todolist/Todolist.tsx",["79","80","81","82","83","84"],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/app/App.tsx",["85"],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/TodolistsList/Todolist/Task/Task.tsx",["86","87","88"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/components/AddItemForm/AddItemForm.tsx",["89","90","91"],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/components/EditableSpan/EditableSpan.tsx",[],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/Login/Login.tsx",["92"],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/Login/auth-reducer.ts",["93"],"import { Dispatch } from 'redux'\nimport { SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType } from '../../app/app-reducer'\nimport {authAPI, todolistsAPI} from \"../../api/todolists-api\";\nimport {handleServerAppError, handleServerNetworkError} from \"../../utils/error-utils\";\n\nconst initialState = {\n    isLoggedIn: false\n}\ntype InitialStateType = typeof initialState\n\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'login/SET-IS-LOGGED-IN':\n            return {...state, isLoggedIn: action.value}\n        default:\n            return state\n    }\n}\n// actions\nexport const setIsLoggedInAC = (value: boolean) =>\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\n\n////============================================================\n// thunks\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha?: boolean) => (dispatch: Dispatch<ActionsType>) => {\n    dispatch(setAppStatusAC('loading'))\n    authAPI.login(email, password, rememberMe, captcha)\n        .then(res => {\n            if (res.data.resultCode === 0) {\n                dispatch(setIsLoggedInAC(true))\n                dispatch(setAppStatusAC('succeeded'))\n            } else {\n                handleServerAppError(res.data, dispatch);\n            }\n        })\n        .catch((error) => {\n        handleServerNetworkError(error, dispatch)\n    })\n}\n\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\n    dispatch(setAppStatusAC('loading'))\n    authAPI.logout()\n        .then(res => {\n            if (res.data.resultCode === 0) {\n                dispatch(setIsLoggedInAC(false))\n                dispatch(setAppStatusAC('succeeded'))\n            } else {\n                handleServerAppError(res.data, dispatch)\n            }\n        })\n        .catch((error) => {\n            handleServerNetworkError(error, dispatch)\n        })\n}\n\n////============================================================\n/*export const addTaskTC = (title: string, todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppErrorActionType | SetAppStatusActionType>) => {\n    dispatch(setAppStatusAC('loading'))\n    todolistsAPI.createTask(todolistId, title)\n        .then(res => {\n            if (res.data.resultCode === 0) {\n                const task = res.data.data.item\n                const action = addTaskAC(task)\n                dispatch(action)\n                dispatch(setAppStatusAC('succeeded'))\n            } else {\n                handleServerAppError(res.data, dispatch);\n            }\n        })\n        .catch((error) => {\n            handleServerNetworkError(error, dispatch)\n        })\n}*/\n\n// types\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | SetAppStatusActionType | SetAppErrorActionType\n",["94","95"],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/TodolistsList/tasks-reducer.ts",["96","97"],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/features/TodolistsList/TodolistsList.tsx",["98","99","100","101","102","103","104","105"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const isLoggedIn = useSelector<AppRootStateType>(state => state.auth.isLoggedIn)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/app/app-reducer.ts",[],"/Users/klevakin/masha/It-Incubator/todolist-all/todolist-16/src/reportWebVitals.ts",[],["106","107"],{"ruleId":"108","severity":1,"message":"109","line":10,"column":45,"nodeType":"110","messageId":"111","endLine":10,"endColumn":47},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":35,"column":8,"nodeType":"118","endLine":35,"endColumn":10,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":39,"column":8,"nodeType":"118","endLine":39,"endColumn":42,"suggestions":"121"},{"ruleId":"116","severity":1,"message":"120","line":46,"column":8,"nodeType":"118","endLine":46,"endColumn":54,"suggestions":"122"},{"ruleId":"116","severity":1,"message":"120","line":48,"column":95,"nodeType":"118","endLine":48,"endColumn":134,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"120","line":49,"column":101,"nodeType":"118","endLine":49,"endColumn":140,"suggestions":"124"},{"ruleId":"116","severity":1,"message":"120","line":50,"column":107,"nodeType":"118","endLine":50,"endColumn":146,"suggestions":"125"},{"ruleId":"116","severity":1,"message":"126","line":38,"column":8,"nodeType":"118","endLine":38,"endColumn":10,"suggestions":"127"},{"ruleId":"116","severity":1,"message":"120","line":15,"column":97,"nodeType":"118","endLine":15,"endColumn":130,"suggestions":"128"},{"ruleId":"116","severity":1,"message":"120","line":20,"column":8,"nodeType":"118","endLine":20,"endColumn":41,"suggestions":"129"},{"ruleId":"116","severity":1,"message":"120","line":24,"column":8,"nodeType":"118","endLine":24,"endColumn":41,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":9,"nodeType":"133","messageId":"134","endLine":2,"endColumn":12},{"ruleId":"131","severity":1,"message":"135","line":2,"column":14,"nodeType":"133","messageId":"134","endLine":2,"endColumn":20},{"ruleId":"131","severity":1,"message":"136","line":2,"column":22,"nodeType":"133","messageId":"134","endLine":2,"endColumn":33},{"ruleId":"137","severity":1,"message":"138","line":62,"column":32,"nodeType":"139","endLine":62,"endColumn":49},{"ruleId":"131","severity":1,"message":"140","line":3,"column":18,"nodeType":"133","messageId":"134","endLine":3,"endColumn":30},{"ruleId":"112","replacedBy":"141"},{"ruleId":"114","replacedBy":"142"},{"ruleId":"131","severity":1,"message":"143","line":5,"column":9,"nodeType":"133","messageId":"134","endLine":5,"endColumn":22},{"ruleId":"108","severity":1,"message":"109","line":13,"column":94,"nodeType":"110","messageId":"111","endLine":13,"endColumn":96},{"ruleId":"116","severity":1,"message":"144","line":36,"column":8,"nodeType":"118","endLine":36,"endColumn":10,"suggestions":"145"},{"ruleId":"116","severity":1,"message":"146","line":41,"column":8,"nodeType":"118","endLine":41,"endColumn":10,"suggestions":"147"},{"ruleId":"116","severity":1,"message":"146","line":46,"column":8,"nodeType":"118","endLine":46,"endColumn":10,"suggestions":"148"},{"ruleId":"116","severity":1,"message":"146","line":51,"column":8,"nodeType":"118","endLine":51,"endColumn":10,"suggestions":"149"},{"ruleId":"116","severity":1,"message":"146","line":56,"column":8,"nodeType":"118","endLine":56,"endColumn":10,"suggestions":"150"},{"ruleId":"116","severity":1,"message":"146","line":61,"column":8,"nodeType":"118","endLine":61,"endColumn":10,"suggestions":"151"},{"ruleId":"116","severity":1,"message":"146","line":66,"column":8,"nodeType":"118","endLine":66,"endColumn":10,"suggestions":"152"},{"ruleId":"116","severity":1,"message":"146","line":71,"column":8,"nodeType":"118","endLine":71,"endColumn":10,"suggestions":"153"},{"ruleId":"112","replacedBy":"154"},{"ruleId":"114","replacedBy":"155"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["156"],"no-negated-in-lhs",["157"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.","ArrayExpression",["158"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["159"],["160"],["161"],["162"],["163"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["164"],["165"],["166"],["167"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'todolistsAPI' is defined but never used.",["156"],["157"],"'setAppErrorAC' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["168"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["169"],["170"],["171"],["172"],["173"],["174"],["175"],["156"],["157"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"178","fix":"180"},{"desc":"178","fix":"181"},{"desc":"178","fix":"182"},{"desc":"178","fix":"183"},{"desc":"184","fix":"185"},{"desc":"178","fix":"186"},{"desc":"178","fix":"187"},{"desc":"178","fix":"188"},{"desc":"189","fix":"190"},{"desc":"184","fix":"191"},{"desc":"184","fix":"192"},{"desc":"184","fix":"193"},{"desc":"184","fix":"194"},{"desc":"184","fix":"195"},{"desc":"184","fix":"196"},{"desc":"184","fix":"197"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"198","text":"199"},"Update the dependencies array to be: [props]",{"range":"200","text":"201"},{"range":"202","text":"201"},{"range":"203","text":"201"},{"range":"204","text":"201"},{"range":"205","text":"201"},"Update the dependencies array to be: [dispatch]",{"range":"206","text":"207"},{"range":"208","text":"201"},{"range":"209","text":"201"},{"range":"210","text":"201"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"211","text":"212"},{"range":"213","text":"207"},{"range":"214","text":"207"},{"range":"215","text":"207"},{"range":"216","text":"207"},{"range":"217","text":"207"},{"range":"218","text":"207"},{"range":"219","text":"207"},[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[1240,1242],"[dispatch]",[765,798],[1071,1104],[1261,1294],[1317,1319],"[demo, dispatch, isLoggedIn]",[1488,1490],[1659,1661],[1864,1866],[2077,2079],[2278,2280],[2425,2427],[2604,2606]]